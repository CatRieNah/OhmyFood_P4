@use 'utils/variables' as vars; //as vars alias pour raccourcir les noms de module variables.
@use 'utils/mixins' as mix;

/****Location***/
.location{
    background-color: #eaeaea;
    @include mix.spacing($gap:17px);
    @include mix.dimensions($height:50px);
    @include mix.center($display:flex);
    box-shadow: 0 4px 4px rgba(0,0,0,.25), 0 -2px 4px rgba(0,0,0,.15);
    color:vars.$dark-color;

    input{
        border: none;
        background-color: #eaeaea;
        @include mix.font($size:14px,$weight:500);
    }
}

/* Intro*/
.intro{
    @include mix.spacing($padding:50px 20px,$margin-top:4px);
    background-color:vars.$bgcolor;
    text-align: center;

    *{
        @include mix.spacing($margin-bottom:15px);
    }

    h1{
        @include mix.font($size:28px,$weight:700);
    }
    
    p{
        color:vars.$dark-color;
        @include mix.font($size:18px,$weight:300);
    }
}

/***Fonctionnement*/
.steps{
    @include mix.spacing($padding:50px 20px);
   
    ol{
        list-style: none; /* anule la numérotation par défaut de la balise ol*/
        counter-reset: steps-counter; /* Réinitialiser le compteur à 0. Cela permet de commencer la numérotation à partir de 1*/
        padding: 0;
    }
}

.steps{
   .list-item{
        background-color:vars.$bgcolor;
        @include mix.center($display:flex);
        @include mix.dimensions($height:70px,$border-radius:20px);
        box-shadow: 0 4px 15px rgba(0,0,0,.15);
        @include mix.spacing($gap:15px,$margin-bottom:30px);
        position: relative;
        cursor: pointer;

        &:hover i{
            color:vars.$primary-color;
        }

        &::before{
            counter-increment: steps-counter; /* Incrementer le compteur de 1 pour chaque élément de la liste*/
            content: counter(steps-counter);
            position: absolute;
            left: -10px;
            @include mix.dimensions($width:25px,$height:25px,$border-radius:50%);
            @include mix.center($display:flex);
            background-color:vars.$primary-color;
            color:vars.$light-color;
        }

        &__icon{
            color: #7e7e7e;

            &--color{
                color:vars.$primary-color;
            }
            
            i{
                @include mix.font($size:larger);
            }
        }

        &__title{
            @include mix.font($weight:500);
        }
    }
}

/*Restaurants*/
.restaurants{
    background-color:vars.$bgcolor;
    @include mix.spacing($padding:50px 20px);
}

.card{
    background-color:vars.$light-color;
    @include mix.dimensions($height:250px,$border-radius:15px);
    box-shadow: 0px 4px 15px rgba(0,0,0,.1);
    overflow: hidden;
    position: relative;
    @include mix.spacing($margin-bottom:15px);
    cursor: pointer;
}

.card-image{
    img{
        height: 175px;
    }

    p{
        display: inline-block;
        @include mix.spacing($padding:5px);
        color: #008766;
        @include mix.font($size:14px,$weight:500);
        background-color:vars.$tertiary-color;
        position: absolute;
        right: 15px;
        top: 20px;
    }
}
 .heart-checkbox{
    position: absolute;
    right:25px;
    bottom: 25px;

    .fa-heart{
        @include mix.font($weight:300,$size:25px);
        cursor: pointer;
        transition: all .4s ease-in-out ;

        &:hover{
            font-weight: 700;
            @include mix.font($weight:700);
            color: transparent;
            background: linear-gradient(vars.$secondary-color,vars.$primary-color);
            -webkit-background-clip: text;
            background-clip: text; 
        }
    }

    input{
        visibility:hidden;
    }
 }

 .card-text{
    @include mix.spacing($padding:10px);
    
    h3{
        @include mix.font($size:18px,$weight:700);
        @include mix.spacing($margin-bottom:5px);
    }

    p{
        @include mix.font($size:17px,$weight:300);
    }
 }